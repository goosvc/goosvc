from goosvc.core import nodes
from goosvc.core import common as common
from dataclasses import dataclass
from goosvc.core.exceptions import GoosvcException


@dataclass
class GoosvcTransaction:
    author: str
    transaction_id: str = None  # ID of the transaction generated by the system

@dataclass
class TransactionNodeContent:
    type: str

class GoosvcTransactions:
    def __init__(self, projects_dir: str, nodes: nodes.GoosvcNodes):
        self.projects_dir = projects_dir
        self.nodes = nodes

    def start_transaction(self, owner: str, project: str, id: str, transaction: GoosvcTransaction):
        transaction_id = common.get_id()
        transaction.transaction_id = transaction_id
        node_content = TransactionNodeContent("start")
        transaction_node = nodes.GoosvcNode("transaction_start", id, transaction.author, node_content, None, None, None, transaction_id)
        branch_id, node_id = self.nodes.add_node(owner, project, transaction_node)
        return branch_id, node_id, transaction_id
    
    def end_transaction(self, owner: str, project: str, id: str, transaction: GoosvcTransaction):
        transaction_id = transaction.transaction_id
        if transaction_id == None:
            raise GoosvcException("1030")
        node_content = TransactionNodeContent("end")
        transaction_node = nodes.GoosvcNode("transaction_end", id, transaction.author, node_content, None, None, None, transaction_id)
        branch_id, node_id = self.nodes.add_node(owner, project, transaction_node)
        return branch_id, node_id, transaction_id
